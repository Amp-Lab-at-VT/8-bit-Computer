pc1 2		--jump freeze
pc1 1		--freeze 
ram 1		--rd 3
ra ram		--mar 1--prel TESTHW
pc1 1		--pc1 x16--func49 TESTHW(m:return_to)
*PAYLOAD
*PAYLOAD
*PAYLOAD
*PAYLOAD
*PAYLOAD
*PAYLOAD
*PAYLOAD
*PAYLOAD
*PAYLOAD
pc1 2		--refresh kernel
*LN16 END KERNEL 0
ram ra		--func17 QSV(@1:return_to, @2:offset, m:qloc)
mar incmar
rb neg
ram neg		--rb@qloc+2
mar incmar
rc lsl
ram lsr		--rc@qloc+3
mar incmar
rd x16
ram x16		--rd@qloc+4
mar 1
ra ram		--get return_to
mar 2
rb ram		--get offset
pc1 apb		
*LN32 END QUICKSAVE (x128)
ra ram		--func33 QLD(@3:return_to, m:qloc) a:a b:b c:c d:d
mar incmar
rb ram
mar incmar
rc ram
mar incmar
rd mar
mar 3
pc1 ram
*
*
*
*
*
*
*LN48 END QUICKLOAD (x128)
rd 4		--func49 TESTHW(m:return_to) a:inc b:incby c:lptr d:cond
rb 0		
rb neg		--inc by -1
ra 3		--init
pc2 x16		--BRZ
rc pc1
rc lsl		--LOOP BEGIN
ra apb
ram ra		--DISPLAY, REMOVE LATER
rd ra		--prep conditional
pc1 mar		--if 0, ESCAPE to mar
rd 0		
pc1 lsr		--otherwise, LOOP RENEW
pc2 0		--disable brz
pc1 1		--end at freeze
*LN64 END TESTHW (x128)